<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.payment.generator.dao.PayMerchantOrderMapper" >
  <resultMap id="BaseResultMap" type="com.payment.generator.domain.PayMerchantOrder" >
    <id column="PAY_NO" property="payNo" jdbcType="VARCHAR" />
    <result column="OUT_TRADE_NO" property="outTradeNo" jdbcType="VARCHAR" />
    <result column="GATE_ORDER_NO" property="gateOrderNo" jdbcType="VARCHAR" />
    <result column="BANK_ORDER_NO" property="bankOrderNo" jdbcType="VARCHAR" />
    <result column="CREATED_TIME" property="createdTime" jdbcType="DATE" />
    <result column="EXP_DATE" property="expDate" jdbcType="DATE" />
    <result column="DEAL_TIME" property="dealTime" jdbcType="DATE" />
    <result column="CALLBACK_TIME" property="callbackTime" jdbcType="DATE" />
    <result column="PAY_AMOUNT" property="payAmount" jdbcType="DECIMAL" />
    <result column="COMMISSION" property="commission" jdbcType="DECIMAL" />
    <result column="REAL_AMOUNT" property="realAmount" jdbcType="DECIMAL" />
    <result column="TRADE_STATE" property="tradeState" jdbcType="DECIMAL" />
    <result column="CALLBACK_STATE" property="callbackState" jdbcType="DECIMAL" />
    <result column="REFUND_STATE" property="refundState" jdbcType="DECIMAL" />
    <result column="REFUND_AMOUNT" property="refundAmount" jdbcType="DECIMAL" />
    <result column="BANK_CODE" property="bankCode" jdbcType="VARCHAR" />
    <result column="BANK_NAME" property="bankName" jdbcType="VARCHAR" />
    <result column="PAY_IP" property="payIp" jdbcType="VARCHAR" />
    <result column="CALLBACK_URL" property="callbackUrl" jdbcType="VARCHAR" />
    <result column="NONTIFY_URL" property="nontifyUrl" jdbcType="VARCHAR" />
    <result column="CHECK_NO" property="checkNo" jdbcType="VARCHAR" />
    <result column="TRADE_NO" property="tradeNo" jdbcType="VARCHAR" />
    <result column="REFUND_TIME" property="refundTime" jdbcType="DATE" />
    <result column="PAY_USER_ID" property="payUserId" jdbcType="VARCHAR" />
    <result column="REMARK" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    PAY_NO, OUT_TRADE_NO, GATE_ORDER_NO, BANK_ORDER_NO, CREATED_TIME, EXP_DATE, DEAL_TIME, 
    CALLBACK_TIME, PAY_AMOUNT, COMMISSION, REAL_AMOUNT, TRADE_STATE, CALLBACK_STATE, 
    REFUND_STATE, REFUND_AMOUNT, BANK_CODE, BANK_NAME, PAY_IP, CALLBACK_URL, NONTIFY_URL, 
    CHECK_NO, TRADE_NO, REFUND_TIME, PAY_USER_ID, REMARK
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.payment.generator.domain.PayMerchantOrderCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from KAN_PAY_MERCHANT_ORDER
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from KAN_PAY_MERCHANT_ORDER
    where PAY_NO = #{payNo,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from KAN_PAY_MERCHANT_ORDER
    where PAY_NO = #{payNo,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.payment.generator.domain.PayMerchantOrderCriteria" >
    delete from KAN_PAY_MERCHANT_ORDER
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.payment.generator.domain.PayMerchantOrder" >
    insert into KAN_PAY_MERCHANT_ORDER (PAY_NO, OUT_TRADE_NO, GATE_ORDER_NO, 
      BANK_ORDER_NO, CREATED_TIME, EXP_DATE, 
      DEAL_TIME, CALLBACK_TIME, PAY_AMOUNT, 
      COMMISSION, REAL_AMOUNT, TRADE_STATE, 
      CALLBACK_STATE, REFUND_STATE, REFUND_AMOUNT, 
      BANK_CODE, BANK_NAME, PAY_IP, 
      CALLBACK_URL, NONTIFY_URL, CHECK_NO, 
      TRADE_NO, REFUND_TIME, PAY_USER_ID, 
      REMARK)
    values (#{payNo,jdbcType=VARCHAR}, #{outTradeNo,jdbcType=VARCHAR}, #{gateOrderNo,jdbcType=VARCHAR}, 
      #{bankOrderNo,jdbcType=VARCHAR}, #{createdTime,jdbcType=DATE}, #{expDate,jdbcType=DATE}, 
      #{dealTime,jdbcType=DATE}, #{callbackTime,jdbcType=DATE}, #{payAmount,jdbcType=DECIMAL}, 
      #{commission,jdbcType=DECIMAL}, #{realAmount,jdbcType=DECIMAL}, #{tradeState,jdbcType=DECIMAL}, 
      #{callbackState,jdbcType=DECIMAL}, #{refundState,jdbcType=DECIMAL}, #{refundAmount,jdbcType=DECIMAL}, 
      #{bankCode,jdbcType=VARCHAR}, #{bankName,jdbcType=VARCHAR}, #{payIp,jdbcType=VARCHAR}, 
      #{callbackUrl,jdbcType=VARCHAR}, #{nontifyUrl,jdbcType=VARCHAR}, #{checkNo,jdbcType=VARCHAR}, 
      #{tradeNo,jdbcType=VARCHAR}, #{refundTime,jdbcType=DATE}, #{payUserId,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.payment.generator.domain.PayMerchantOrder" >
    insert into KAN_PAY_MERCHANT_ORDER
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="payNo != null" >
        PAY_NO,
      </if>
      <if test="outTradeNo != null" >
        OUT_TRADE_NO,
      </if>
      <if test="gateOrderNo != null" >
        GATE_ORDER_NO,
      </if>
      <if test="bankOrderNo != null" >
        BANK_ORDER_NO,
      </if>
      <if test="createdTime != null" >
        CREATED_TIME,
      </if>
      <if test="expDate != null" >
        EXP_DATE,
      </if>
      <if test="dealTime != null" >
        DEAL_TIME,
      </if>
      <if test="callbackTime != null" >
        CALLBACK_TIME,
      </if>
      <if test="payAmount != null" >
        PAY_AMOUNT,
      </if>
      <if test="commission != null" >
        COMMISSION,
      </if>
      <if test="realAmount != null" >
        REAL_AMOUNT,
      </if>
      <if test="tradeState != null" >
        TRADE_STATE,
      </if>
      <if test="callbackState != null" >
        CALLBACK_STATE,
      </if>
      <if test="refundState != null" >
        REFUND_STATE,
      </if>
      <if test="refundAmount != null" >
        REFUND_AMOUNT,
      </if>
      <if test="bankCode != null" >
        BANK_CODE,
      </if>
      <if test="bankName != null" >
        BANK_NAME,
      </if>
      <if test="payIp != null" >
        PAY_IP,
      </if>
      <if test="callbackUrl != null" >
        CALLBACK_URL,
      </if>
      <if test="nontifyUrl != null" >
        NONTIFY_URL,
      </if>
      <if test="checkNo != null" >
        CHECK_NO,
      </if>
      <if test="tradeNo != null" >
        TRADE_NO,
      </if>
      <if test="refundTime != null" >
        REFUND_TIME,
      </if>
      <if test="payUserId != null" >
        PAY_USER_ID,
      </if>
      <if test="remark != null" >
        REMARK,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="payNo != null" >
        #{payNo,jdbcType=VARCHAR},
      </if>
      <if test="outTradeNo != null" >
        #{outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="gateOrderNo != null" >
        #{gateOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="bankOrderNo != null" >
        #{bankOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null" >
        #{createdTime,jdbcType=DATE},
      </if>
      <if test="expDate != null" >
        #{expDate,jdbcType=DATE},
      </if>
      <if test="dealTime != null" >
        #{dealTime,jdbcType=DATE},
      </if>
      <if test="callbackTime != null" >
        #{callbackTime,jdbcType=DATE},
      </if>
      <if test="payAmount != null" >
        #{payAmount,jdbcType=DECIMAL},
      </if>
      <if test="commission != null" >
        #{commission,jdbcType=DECIMAL},
      </if>
      <if test="realAmount != null" >
        #{realAmount,jdbcType=DECIMAL},
      </if>
      <if test="tradeState != null" >
        #{tradeState,jdbcType=DECIMAL},
      </if>
      <if test="callbackState != null" >
        #{callbackState,jdbcType=DECIMAL},
      </if>
      <if test="refundState != null" >
        #{refundState,jdbcType=DECIMAL},
      </if>
      <if test="refundAmount != null" >
        #{refundAmount,jdbcType=DECIMAL},
      </if>
      <if test="bankCode != null" >
        #{bankCode,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null" >
        #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="payIp != null" >
        #{payIp,jdbcType=VARCHAR},
      </if>
      <if test="callbackUrl != null" >
        #{callbackUrl,jdbcType=VARCHAR},
      </if>
      <if test="nontifyUrl != null" >
        #{nontifyUrl,jdbcType=VARCHAR},
      </if>
      <if test="checkNo != null" >
        #{checkNo,jdbcType=VARCHAR},
      </if>
      <if test="tradeNo != null" >
        #{tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="refundTime != null" >
        #{refundTime,jdbcType=DATE},
      </if>
      <if test="payUserId != null" >
        #{payUserId,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.payment.generator.domain.PayMerchantOrderCriteria" resultType="java.lang.Integer" >
    select count(*) from KAN_PAY_MERCHANT_ORDER
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update KAN_PAY_MERCHANT_ORDER
    <set >
      <if test="record.payNo != null" >
        PAY_NO = #{record.payNo,jdbcType=VARCHAR},
      </if>
      <if test="record.outTradeNo != null" >
        OUT_TRADE_NO = #{record.outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="record.gateOrderNo != null" >
        GATE_ORDER_NO = #{record.gateOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.bankOrderNo != null" >
        BANK_ORDER_NO = #{record.bankOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.createdTime != null" >
        CREATED_TIME = #{record.createdTime,jdbcType=DATE},
      </if>
      <if test="record.expDate != null" >
        EXP_DATE = #{record.expDate,jdbcType=DATE},
      </if>
      <if test="record.dealTime != null" >
        DEAL_TIME = #{record.dealTime,jdbcType=DATE},
      </if>
      <if test="record.callbackTime != null" >
        CALLBACK_TIME = #{record.callbackTime,jdbcType=DATE},
      </if>
      <if test="record.payAmount != null" >
        PAY_AMOUNT = #{record.payAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.commission != null" >
        COMMISSION = #{record.commission,jdbcType=DECIMAL},
      </if>
      <if test="record.realAmount != null" >
        REAL_AMOUNT = #{record.realAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.tradeState != null" >
        TRADE_STATE = #{record.tradeState,jdbcType=DECIMAL},
      </if>
      <if test="record.callbackState != null" >
        CALLBACK_STATE = #{record.callbackState,jdbcType=DECIMAL},
      </if>
      <if test="record.refundState != null" >
        REFUND_STATE = #{record.refundState,jdbcType=DECIMAL},
      </if>
      <if test="record.refundAmount != null" >
        REFUND_AMOUNT = #{record.refundAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.bankCode != null" >
        BANK_CODE = #{record.bankCode,jdbcType=VARCHAR},
      </if>
      <if test="record.bankName != null" >
        BANK_NAME = #{record.bankName,jdbcType=VARCHAR},
      </if>
      <if test="record.payIp != null" >
        PAY_IP = #{record.payIp,jdbcType=VARCHAR},
      </if>
      <if test="record.callbackUrl != null" >
        CALLBACK_URL = #{record.callbackUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.nontifyUrl != null" >
        NONTIFY_URL = #{record.nontifyUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.checkNo != null" >
        CHECK_NO = #{record.checkNo,jdbcType=VARCHAR},
      </if>
      <if test="record.tradeNo != null" >
        TRADE_NO = #{record.tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="record.refundTime != null" >
        REFUND_TIME = #{record.refundTime,jdbcType=DATE},
      </if>
      <if test="record.payUserId != null" >
        PAY_USER_ID = #{record.payUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        REMARK = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update KAN_PAY_MERCHANT_ORDER
    set PAY_NO = #{record.payNo,jdbcType=VARCHAR},
      OUT_TRADE_NO = #{record.outTradeNo,jdbcType=VARCHAR},
      GATE_ORDER_NO = #{record.gateOrderNo,jdbcType=VARCHAR},
      BANK_ORDER_NO = #{record.bankOrderNo,jdbcType=VARCHAR},
      CREATED_TIME = #{record.createdTime,jdbcType=DATE},
      EXP_DATE = #{record.expDate,jdbcType=DATE},
      DEAL_TIME = #{record.dealTime,jdbcType=DATE},
      CALLBACK_TIME = #{record.callbackTime,jdbcType=DATE},
      PAY_AMOUNT = #{record.payAmount,jdbcType=DECIMAL},
      COMMISSION = #{record.commission,jdbcType=DECIMAL},
      REAL_AMOUNT = #{record.realAmount,jdbcType=DECIMAL},
      TRADE_STATE = #{record.tradeState,jdbcType=DECIMAL},
      CALLBACK_STATE = #{record.callbackState,jdbcType=DECIMAL},
      REFUND_STATE = #{record.refundState,jdbcType=DECIMAL},
      REFUND_AMOUNT = #{record.refundAmount,jdbcType=DECIMAL},
      BANK_CODE = #{record.bankCode,jdbcType=VARCHAR},
      BANK_NAME = #{record.bankName,jdbcType=VARCHAR},
      PAY_IP = #{record.payIp,jdbcType=VARCHAR},
      CALLBACK_URL = #{record.callbackUrl,jdbcType=VARCHAR},
      NONTIFY_URL = #{record.nontifyUrl,jdbcType=VARCHAR},
      CHECK_NO = #{record.checkNo,jdbcType=VARCHAR},
      TRADE_NO = #{record.tradeNo,jdbcType=VARCHAR},
      REFUND_TIME = #{record.refundTime,jdbcType=DATE},
      PAY_USER_ID = #{record.payUserId,jdbcType=VARCHAR},
      REMARK = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.payment.generator.domain.PayMerchantOrder" >
    update KAN_PAY_MERCHANT_ORDER
    <set >
      <if test="outTradeNo != null" >
        OUT_TRADE_NO = #{outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="gateOrderNo != null" >
        GATE_ORDER_NO = #{gateOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="bankOrderNo != null" >
        BANK_ORDER_NO = #{bankOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null" >
        CREATED_TIME = #{createdTime,jdbcType=DATE},
      </if>
      <if test="expDate != null" >
        EXP_DATE = #{expDate,jdbcType=DATE},
      </if>
      <if test="dealTime != null" >
        DEAL_TIME = #{dealTime,jdbcType=DATE},
      </if>
      <if test="callbackTime != null" >
        CALLBACK_TIME = #{callbackTime,jdbcType=DATE},
      </if>
      <if test="payAmount != null" >
        PAY_AMOUNT = #{payAmount,jdbcType=DECIMAL},
      </if>
      <if test="commission != null" >
        COMMISSION = #{commission,jdbcType=DECIMAL},
      </if>
      <if test="realAmount != null" >
        REAL_AMOUNT = #{realAmount,jdbcType=DECIMAL},
      </if>
      <if test="tradeState != null" >
        TRADE_STATE = #{tradeState,jdbcType=DECIMAL},
      </if>
      <if test="callbackState != null" >
        CALLBACK_STATE = #{callbackState,jdbcType=DECIMAL},
      </if>
      <if test="refundState != null" >
        REFUND_STATE = #{refundState,jdbcType=DECIMAL},
      </if>
      <if test="refundAmount != null" >
        REFUND_AMOUNT = #{refundAmount,jdbcType=DECIMAL},
      </if>
      <if test="bankCode != null" >
        BANK_CODE = #{bankCode,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null" >
        BANK_NAME = #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="payIp != null" >
        PAY_IP = #{payIp,jdbcType=VARCHAR},
      </if>
      <if test="callbackUrl != null" >
        CALLBACK_URL = #{callbackUrl,jdbcType=VARCHAR},
      </if>
      <if test="nontifyUrl != null" >
        NONTIFY_URL = #{nontifyUrl,jdbcType=VARCHAR},
      </if>
      <if test="checkNo != null" >
        CHECK_NO = #{checkNo,jdbcType=VARCHAR},
      </if>
      <if test="tradeNo != null" >
        TRADE_NO = #{tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="refundTime != null" >
        REFUND_TIME = #{refundTime,jdbcType=DATE},
      </if>
      <if test="payUserId != null" >
        PAY_USER_ID = #{payUserId,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where PAY_NO = #{payNo,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.payment.generator.domain.PayMerchantOrder" >
    update KAN_PAY_MERCHANT_ORDER
    set OUT_TRADE_NO = #{outTradeNo,jdbcType=VARCHAR},
      GATE_ORDER_NO = #{gateOrderNo,jdbcType=VARCHAR},
      BANK_ORDER_NO = #{bankOrderNo,jdbcType=VARCHAR},
      CREATED_TIME = #{createdTime,jdbcType=DATE},
      EXP_DATE = #{expDate,jdbcType=DATE},
      DEAL_TIME = #{dealTime,jdbcType=DATE},
      CALLBACK_TIME = #{callbackTime,jdbcType=DATE},
      PAY_AMOUNT = #{payAmount,jdbcType=DECIMAL},
      COMMISSION = #{commission,jdbcType=DECIMAL},
      REAL_AMOUNT = #{realAmount,jdbcType=DECIMAL},
      TRADE_STATE = #{tradeState,jdbcType=DECIMAL},
      CALLBACK_STATE = #{callbackState,jdbcType=DECIMAL},
      REFUND_STATE = #{refundState,jdbcType=DECIMAL},
      REFUND_AMOUNT = #{refundAmount,jdbcType=DECIMAL},
      BANK_CODE = #{bankCode,jdbcType=VARCHAR},
      BANK_NAME = #{bankName,jdbcType=VARCHAR},
      PAY_IP = #{payIp,jdbcType=VARCHAR},
      CALLBACK_URL = #{callbackUrl,jdbcType=VARCHAR},
      NONTIFY_URL = #{nontifyUrl,jdbcType=VARCHAR},
      CHECK_NO = #{checkNo,jdbcType=VARCHAR},
      TRADE_NO = #{tradeNo,jdbcType=VARCHAR},
      REFUND_TIME = #{refundTime,jdbcType=DATE},
      PAY_USER_ID = #{payUserId,jdbcType=VARCHAR},
      REMARK = #{remark,jdbcType=VARCHAR}
    where PAY_NO = #{payNo,jdbcType=VARCHAR}
  </update>
  <select resultMap="BaseResultMap" parameterType="com.payment.generator.domain.PayMerchantOrderCriteria" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from KAN_PAY_MERCHANT_ORDER
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <cache />
</mapper>